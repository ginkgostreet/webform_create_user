<?php
/**
 * This module provides a way to create a Drupal user upon submission of
 * specified webforms, using specified components as the basis for the user
 * account.
 *
 * @author Frank J. GÃ³mez <frank@ginkgostreet.com>
 */

/**
 * Implementation of hook_webform_submission_insert.
 *
 * @see http://drupalcontrib.org/api/drupal/contributions%21webform%21webform.api.php/function/hook_webform_submission_insert/7
 *
 * @param stdClass $node
 * @param stClass $submission
 */
function webform_create_user_webform_submission_insert($node, $submission) {
  $config = array();
  if (property_exists($node, 'uuid')) {
    $config = _webform_create_user_fetchConfig($node->uuid, 'uuid');
  }

  if (empty($config) && property_exists($node, 'nid')) {
    $config = _webform_create_user_fetchConfig($node->nid);
  }

  if (array_key_exists('email', $config)) {
    _webform_create_user_createAccount($node, $submission, $config['email']);
  }
}

/**
 * Creates a Drupal user using the value pointed to by the email_form_key.
 *
 * No action is taken if the user already exists.
 *
 * @param stdClass $node
 *   The webform from which the submission was made
 * @param stdClass $submission
 *   The webform submission
 * @param string $email_form_key
 *   The form_key that identifies the email address to use to create the Drupal
 *   user.
 */
function _webform_create_user_createAccount(stdClass $node, stdClass $submission, $email_form_key) {
  $componentID = _webform_create_user_getWebformComponentID($email_form_key, $node);

  if ($componentID !== FALSE) {
    $email = $submission->data[$componentID][0];

    // make sure a Drupal account with this email address doesn't already exist
    if (user_load_by_mail($email) === FALSE) {
      $params = array(
        'init' => $email,
        'name' => $email,
        'mail' => $email,
        'pass' => md5(uniqid(rand(), true)),
        'status' => 1,
      );
      $drupalUser = user_save(NULL, $params);

      if ($drupalUser){
        $operation = 'register_no_approval_required';
        _user_mail_notify($operation, $drupalUser);
      }
    }
  }
}

/**
 * @param string $form_key
 * @param stdClass $node The webform
 * @return mixed Int component ID, or boolean FALSE if not found or if node is not a webform
 */
function _webform_create_user_getWebformComponentID($form_key, stdClass $node) {
  $result = FALSE;

  if (property_exists($node, 'webform')) {
    foreach ($node->webform['components'] as $componentID => $data) {
      if ($data['form_key'] === $form_key) {
        $result = $componentID;
        break;
      }
    }
  }
  return $result;
}

/**
 * Fetches the config for a webform (i.e., which webform components should we
 * use to create the Drupal user?)
 *
 * @param string $identifier
 *   The unique ID that identifies the webform. If identifier type is 'node,'
 *   for example, this would be the node ID.
 * @param string $identifier_type
 *   The identifier by which to look up which webform component component should
 *   be used to create the Drupal user. Defaults to 'node.'
 * @return array
 *   The components which will be used to create the Drupal user. At this point,
 *   the array will have only one key 'email,' which will be used for both the
 *   email and the user name.
 */
function _webform_create_user_fetchConfig($identifier, $identifier_type = 'node') {
  $all_configs = variable_get('webform_create_user', FALSE);
  $results = array();

  if ($all_configs === FALSE) {
    return $results;
  }

  foreach ($all_configs as $data) {
    if ($data['id_type'] == $identifier_type && $data['id'] == $identifier) {
      $results = $data['components'];
      break;
    }
  }

  return $results;
}

/**
 * Stores the config for a webform (i.e., which webform components should we
 * use to create the Drupal user?)
 *
 * @param array $components
 *   The form_keys for the components of the webform that should be used to
 *   create a Drupal user, keyed by the component's role
 *   (e.g.: 'email' => 'civicrm_2_contact_1_email_email'). Presently only the
 *   key 'email' is supported.
 * @param string $identifier
 *   The unique ID that identifies the webform. If identifier type is 'node,'
 *   for example, this would be the node ID.
 * @param string $identifier_type
 *   The identifier by which to look up which webform component component should
 *   be used to create the Drupal user. Defaults to 'node.'
 * @return array
 *   The components which will be used to create the Drupal user. At this point,
 *   the array will have only one key 'email,' which will be used for both the
 *   email and the user name.
 */
function _webform_create_user_saveConfig(array $components, $identifier, $identifier_type = 'node') {
  // rekey the array for simplicity; the keys don't mean anything anyway
  $all_configs = array_values(variable_get('webform_create_user', array()));

  // Determine where in the array to save new values. For updates, replace
  // existing data; for inserts, append to the array.
  $save_key = count($all_configs);
  foreach ($all_configs as $key => $data) {
    if ($data['id_type'] === $identifier_type && $data['id'] === $identifier) {
      $save_key = $key;
      break;
    }
  }

  $all_configs[$save_key] = array(
    'id' => $identifier,
    'id_type' => $identifier_type,
    'components' => $components,
  );

  variable_set('webform_create_user', $all_configs);
}